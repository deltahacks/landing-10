---
import type { GetImageResult } from "astro";
import clsx from "clsx";
import { getImage } from "astro:assets";

export const getImgSrcs = async (imgSrc: ImageMetadata, widths: number[]) => {
  return await Promise.all(
    widths.map(async (width) => ({
      width: width,
      src: await getImage({ src: imgSrc, width: width }),
    })),
  );
};

export type ResponsiveImageItem = {
  src: ImageMetadata;
  alt: string;
  srcs: {
    width: number;
    src: GetImageResult;
  }[];
  sizes?: string;
};

interface Props {
  image: ResponsiveImageItem;
  loading?: "lazy" | "eager";
}

const { image: responsiveImage, loading } = Astro.props;
---

<img
  class={"min-w-[80%] brightness-0 invert object-contain max-h-32 p-2"}
  src={responsiveImage?.src.src}
  alt={responsiveImage?.alt}
  width={responsiveImage?.src.width}
  height={responsiveImage?.src.height}
  srcset={responsiveImage?.srcs
    .map((img) => `${img.src.src} ${img.width}w`)
    .join(", ")}
  loading={loading}
/>
